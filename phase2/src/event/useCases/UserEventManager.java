package event.useCases;

import account.entities.User;
import room.RoomManager;

import java.util.List;

/**
 * A use case class that contains user's events
 */
public abstract class UserEventManager {
    protected static final int START = 9;
    protected static final int END = 17;
    protected static final int DAY = 7;
    public final User user;
    protected ScheduleGenerator scheduleGenerator;

    /**
     * Constructs a new UserEventManager with a User.
     *
     * @param user An instance of User who needs a user event manager.
     */
    public UserEventManager(User user, RoomManager rm) {
        this.user = user;
        this.scheduleGenerator = new ScheduleGenerator(rm.getAllRoomId(), START, END, DAY);
    }

    //public abstract boolean checkAvailability(User user);

    /**
     * Return an Arraylist of the events the user participates in.
     *
     * @return a ArrayList of user events;
     */
    public abstract List<Integer> getMyEventList(EventBoard eb);

    /**
     * Return an Arraylist of the schedule that contains the events the user participates in.
     *
     * @param eb event board
     * @return an ArrayList generated by ScheduleGenerator
     * @see ScheduleGenerator
     */
    public abstract List<List<String>> getMySchedule(EventBoard eb);


}